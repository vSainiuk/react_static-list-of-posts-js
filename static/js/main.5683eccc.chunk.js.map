{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","userId","title","length","PostList","posts","postsFromServer","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"iw8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,UClBEG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,YCNvCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,UCACW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAwCD,EAAxCC,OAAQC,EAAgCF,EAAhCE,MAAOZ,EAAyBU,EAAzBV,KAAMQ,EAAmBE,EAAnBF,KAAMJ,EAAaM,EAAbN,SAEnC,OACE,mCACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,eAED,cAAC,EAAD,CAAUJ,KAAMA,GAAWG,SAI/B,mBAAGV,UAAU,iBAAb,SACGD,IAGFI,EAASS,OACN,cAAC,EAAD,CAAaT,SAAUA,IACvB,sBAAM,UAAQ,oBAAd,+BCzBCU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKd,UAAU,WAAf,SACGc,EAAMV,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,Y,qBCUzD,IAAMS,EAAQC,EAAgBX,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAVeG,EAUDD,EAAKC,OATZM,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOK,MAUhDP,UAPmBe,EAOGT,EAAKJ,GANpBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAqBA,EAJJR,KAcJW,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5683eccc.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">{name}</strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />))}\n    </div>\n  </>\n);\n","export const UserInfo = ({ user }) => (\n  <>\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { userId, title, body, user, comments } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">\n            {title}\n          </h3>\n\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} key={userId} />\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        {comments.length\n          ? <CommentList comments={comments} />\n          : <span data-cy=\"NoCommentsMessage\">No comments</span>}\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => <PostInfo post={post} key={post.id} />)}\n    </div>\n  </>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}